package com.authservice.controller;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatusCode;
import org.springframework.http.ResponseEntity;
import org.springframework.security.authentication.AuthenticationManager;
import org.springframework.security.authentication.UsernamePasswordAuthenticationToken;
import org.springframework.security.core.Authentication;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.authservice.service.AuthService;
import com.authservice.userdto.APIResponse;
import com.authservice.userdto.LoginDto;
import com.authservice.userdto.UserDto;

@RestController
@RequestMapping("/api/v1/auth")
public class UserController {
	@Autowired
	private AuthService authService;
	
	 @Autowired
	 private AuthenticationManager authManager;

	@PostMapping("/register")
	private ResponseEntity<APIResponse<String>> registerUser(@RequestBody UserDto userDto) {
		APIResponse<String> response = authService.register(userDto);
		System.out.println(userDto.getName());
		return new ResponseEntity<>(response, HttpStatusCode.valueOf(response.getStatus()));
	}
	 @PostMapping("/login")
	  public ResponseEntity<APIResponse<String>> loginCheck(@RequestBody LoginDto
	 loginDto){
	   
	   APIResponse<String> response = new APIResponse<>();
	   
	   UsernamePasswordAuthenticationToken token = 
	     new 
	UsernamePasswordAuthenticationToken(loginDto.getUsername(), loginDto.getPassword());
	   
	  try {
	    Authentication authenticate = authManager.authenticate(token);
	    
	    if(authenticate.isAuthenticated()) {
	     response.setMessage("Login Sucessful");
	     response.setStatus(200);
	     response.setData("User has logged");
	     return new ResponseEntity<>(response, 
	HttpStatusCode.valueOf(response.getStatus()));
	    }
	  } catch (Exception e) {
	   e.printStackTrace();
	  }
	  
	   response.setMessage("Failed");
	   response.setStatus(401);
	   response.setData("Un-Authorized Access");
	   return new ResponseEntity<>(response, 
	HttpStatusCode.valueOf(response.getStatus()));
	  }
	 }
}